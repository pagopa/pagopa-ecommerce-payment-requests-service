microservice-chart:
  namespace: "ecommerce"
  nameOverride: ""
  fullnameOverride: ""
  canaryDelivery:
    create: false
    ingress:
      bluegreen: true
      #set canary deployment with traffic balancing see https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md#canary for more info
      header: true
      headerName: deployment
      headerValue: blue
      weightPercent: 10
    image:
      repository: pagopadcommonacr.azurecr.io/pagopaecommercepaymentrequestsservice
      tag: "latest"
    envConfig:
      NODO_HOSTNAME: https://api.dev.platform.pagopa.it
      ECS_SERVICE_NAME: pagopa-ecommerce-payment-requests-service-blue
      CHECKOUT_URL: https://api.dev.platform.pagopa.it/ecommerce/checkout/v1/carts/{0}/redirect?clientId={1}
    envSecret: {}
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 6
    periodSeconds: 10
  image:
    repository: pagopadcommonacr.azurecr.io/pagopaecommercepaymentrequestsservice
    tag: "1.6.0" #improve
    pullPolicy: Always
    port: 8080
  ingress:
    create: true
    host: "weudev.ecommerce.internal.dev.platform.pagopa.it"
    path: /pagopa-ecommerce-payment-requests-service/(.*)
    pathType: "ImplementationSpecific"
    servicePort: 8080
  serviceAccount:
    create: false
    annotations: {}
    name: "ecommerce-workload-identity"
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  service:
    type: ClusterIP
    ports:
      - 8080
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "512Mi"
      cpu: "300m"
  autoscaling:
    minReplica: 1
    maxReplica: 2
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: azure-monitor
        metadata:
          tenantId: 7788edaf-0346-4068-9d79-c868aed15b3d
          subscriptionId: bbe47ad4-08b3-4925-94c5-1278e5819b86
          resourceGroupName: pagopa-d-ecommerce-sec-rg
          resourceURI: Microsoft.KeyVault/vaults/pagopa-d-ecommerce-kv
          metricName: ServiceApiHit
          # metricNamespace: Microsoft.KeyVault/vaults
          # metricFilter: namespace eq 'default'
          # metricAggregationInterval: "-1:1:0"
          metricAggregationType: Count
          targetValue: "30"
  terminationGracePeriodSeconds: 30
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  envConfig:
    REDIS_PORT: "6380"
    REDIS_SSL_ENABLED: "true"
    REDIS_TIMEOUT: "60000"
    CHECKOUT_URL: https://api.dev.platform.pagopa.it/ecommerce/checkout/v1/carts/{0}/redirect?clientId={1}
    NODO_HOSTNAME: https://api.uat.platform.pagopa.it
    NODE_FOR_PSP_URI: /nodo/node-for-psp/v1
    NODO_PER_PM_URI: /nodo/nodo-per-pm/v1/checkPosition
    NODO_READ_TIMEOUT: "10000"
    NODO_CONNECTION_TIMEOUT: "10000"
    CARTS_MAX_ALLOWED_PAYMENT_NOTICES: "5"
    OTEL_RESOURCE_ATTRIBUTES: "service.name=pagopa-ecommerce-payment-requests-service,deployment.environment=dev"
    OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.elastic-system.svc:4317"
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: otlp
    OTEL_LOGS_EXPORTER: none
    OTEL_TRACES_SAMPLER: "always_on"
    ECS_SERVICE_NAME: pagopa-ecommerce-payment-requests-service
    ECS_SERVICE_ENVIRONMENT: "dev"
    PERSONAL_DATA_VAULT_API_BASE_PATH: "https://api.uat.tokenizer.pdv.pagopa.it/tokenizer/v1"
  envSecret:
    REDIS_PASSWORD: redis-ecommerce-access-key
    REDIS_HOST: redis-ecommerce-hostname
    NODO_CONNECTION_STRING: nodo-connection-string
    OTEL_EXPORTER_OTLP_HEADERS: elastic-otel-token-header
    PERSONAL_DATA_VAULT_API_KEY: personal-data-vault-api-key
  keyvault:
    name: "pagopa-d-ecommerce-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  azure:
    workloadIdentityClientId: 1be61b58-24e2-49c8-b401-89ebd004bf2e
